{"version":3,"file":"service-worker.js","sources":["../../../packages/service-worker/esm5/src/low_level.js","../../../packages/service-worker/esm5/src/push.js","../../../packages/service-worker/esm5/src/update.js","../../../packages/service-worker/esm5/src/module.js","../../../packages/service-worker/esm5/src/index.js","../../../packages/service-worker/esm5/public_api.js","../../../packages/service-worker/esm5/service-worker.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, PLATFORM_ID } from '@angular/core';\nimport { concat as obs_concat } from 'rxjs/observable/concat';\nimport { defer as obs_defer } from 'rxjs/observable/defer';\nimport { fromEvent as obs_fromEvent } from 'rxjs/observable/fromEvent';\nimport { of as obs_of } from 'rxjs/observable/of';\nimport { _throw as obs_throw } from 'rxjs/observable/throw';\nimport { _do as op_do } from 'rxjs/operator/do';\nimport { filter as op_filter } from 'rxjs/operator/filter';\nimport { map as op_map } from 'rxjs/operator/map';\nimport { publish as op_publish } from 'rxjs/operator/publish';\nimport { switchMap as op_switchMap } from 'rxjs/operator/switchMap';\nimport { take as op_take } from 'rxjs/operator/take';\nimport { toPromise as op_toPromise } from 'rxjs/operator/toPromise';\nexport var /** @type {?} */ ERR_SW_NOT_SUPPORTED = 'Service workers are disabled or not supported by this browser';\n/**\n * @record\n */\nexport function Version() { }\nfunction Version_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Version.prototype.hash;\n    /** @type {?|undefined} */\n    Version.prototype.appData;\n}\n/**\n * \\@experimental\n * @record\n */\nexport function UpdateAvailableEvent() { }\nfunction UpdateAvailableEvent_tsickle_Closure_declarations() {\n    /** @type {?} */\n    UpdateAvailableEvent.prototype.type;\n    /** @type {?} */\n    UpdateAvailableEvent.prototype.current;\n    /** @type {?} */\n    UpdateAvailableEvent.prototype.available;\n}\n/**\n * \\@experimental\n * @record\n */\nexport function UpdateActivatedEvent() { }\nfunction UpdateActivatedEvent_tsickle_Closure_declarations() {\n    /** @type {?} */\n    UpdateActivatedEvent.prototype.type;\n    /** @type {?|undefined} */\n    UpdateActivatedEvent.prototype.previous;\n    /** @type {?} */\n    UpdateActivatedEvent.prototype.current;\n}\n/**\n * @record\n */\nfunction TypedEvent() { }\nfunction TypedEvent_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TypedEvent.prototype.type;\n}\n/**\n * @record\n */\nfunction StatusEvent() { }\nfunction StatusEvent_tsickle_Closure_declarations() {\n    /** @type {?} */\n    StatusEvent.prototype.type;\n    /** @type {?} */\n    StatusEvent.prototype.nonce;\n    /** @type {?} */\n    StatusEvent.prototype.status;\n    /** @type {?|undefined} */\n    StatusEvent.prototype.error;\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction errorObservable(message) {\n    return obs_defer(function () { return obs_throw(new Error(message)); });\n}\n/**\n * \\@experimental\n */\nvar NgswCommChannel = /** @class */ (function () {\n    function NgswCommChannel(serviceWorker, platformId) {\n        this.serviceWorker = serviceWorker;\n        if (!serviceWorker || !isPlatformBrowser(platformId)) {\n            this.serviceWorker = undefined;\n            this.worker = this.events = this.registration = errorObservable(ERR_SW_NOT_SUPPORTED);\n        }\n        else {\n            var /** @type {?} */ controllerChangeEvents = /** @type {?} */ ((obs_fromEvent(serviceWorker, 'controllerchange')));\n            var /** @type {?} */ controllerChanges = /** @type {?} */ ((op_map.call(controllerChangeEvents, function () { return serviceWorker.controller; })));\n            var /** @type {?} */ currentController = /** @type {?} */ ((obs_defer(function () { return obs_of(serviceWorker.controller); })));\n            var /** @type {?} */ controllerWithChanges = /** @type {?} */ ((obs_concat(currentController, controllerChanges)));\n            this.worker = /** @type {?} */ ((op_filter.call(controllerWithChanges, function (c) { return !!c; })));\n            this.registration = /** @type {?} */ ((op_switchMap.call(this.worker, function () { return serviceWorker.getRegistration(); })));\n            var /** @type {?} */ rawEvents = obs_fromEvent(serviceWorker, 'message');\n            var /** @type {?} */ rawEventPayload = /** @type {?} */ ((op_map.call(rawEvents, function (event) { return event.data; })));\n            var /** @type {?} */ eventsUnconnected = /** @type {?} */ ((op_filter.call(rawEventPayload, function (event) { return !!event && !!(/** @type {?} */ (event))['type']; })));\n            var /** @type {?} */ events = /** @type {?} */ ((op_publish.call(eventsUnconnected)));\n            this.events = events;\n            events.connect();\n        }\n    }\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} action\n     * @param {?} payload\n     * @return {?}\n     */\n    NgswCommChannel.prototype.postMessage = /**\n     * \\@internal\n     * @param {?} action\n     * @param {?} payload\n     * @return {?}\n     */\n    function (action, payload) {\n        var /** @type {?} */ worker = op_take.call(this.worker, 1);\n        var /** @type {?} */ sideEffect = op_do.call(worker, function (sw) {\n            sw.postMessage(tslib_1.__assign({ action: action }, payload));\n        });\n        return /** @type {?} */ ((op_toPromise.call(sideEffect).then(function () { return undefined; })));\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} type\n     * @param {?} payload\n     * @param {?} nonce\n     * @return {?}\n     */\n    NgswCommChannel.prototype.postMessageWithStatus = /**\n     * \\@internal\n     * @param {?} type\n     * @param {?} payload\n     * @param {?} nonce\n     * @return {?}\n     */\n    function (type, payload, nonce) {\n        var /** @type {?} */ waitForStatus = this.waitForStatus(nonce);\n        var /** @type {?} */ postMessage = this.postMessage(type, payload);\n        return Promise.all([waitForStatus, postMessage]).then(function () { return undefined; });\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    NgswCommChannel.prototype.generateNonce = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () { return Math.round(Math.random() * 10000000); };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @template T\n     * @param {?} type\n     * @return {?}\n     */\n    NgswCommChannel.prototype.eventsOfType = /**\n     * \\@internal\n     * @template T\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return /** @type {?} */ ((op_filter.call(this.events, function (event) { return event.type === type; })));\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @template T\n     * @param {?} type\n     * @return {?}\n     */\n    NgswCommChannel.prototype.nextEventOfType = /**\n     * \\@internal\n     * @template T\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return /** @type {?} */ ((op_take.call(this.eventsOfType(type), 1)));\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} nonce\n     * @return {?}\n     */\n    NgswCommChannel.prototype.waitForStatus = /**\n     * \\@internal\n     * @param {?} nonce\n     * @return {?}\n     */\n    function (nonce) {\n        var /** @type {?} */ statusEventsWithNonce = /** @type {?} */ ((op_filter.call(this.eventsOfType('STATUS'), function (event) { return event.nonce === nonce; })));\n        var /** @type {?} */ singleStatusEvent = /** @type {?} */ ((op_take.call(statusEventsWithNonce, 1)));\n        var /** @type {?} */ mapErrorAndValue = /** @type {?} */ ((op_map.call(singleStatusEvent, function (event) {\n            if (event.status) {\n                return undefined;\n            }\n            throw new Error(/** @type {?} */ ((event.error)));\n        })));\n        return op_toPromise.call(mapErrorAndValue);\n    };\n    Object.defineProperty(NgswCommChannel.prototype, \"isEnabled\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !!this.serviceWorker; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @nocollapse */\n    NgswCommChannel.ctorParameters = function () { return [\n        null,\n        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n    ]; };\n    return NgswCommChannel;\n}());\nexport { NgswCommChannel };\nfunction NgswCommChannel_tsickle_Closure_declarations() {\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    NgswCommChannel.ctorParameters;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    NgswCommChannel.prototype.worker;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    NgswCommChannel.prototype.registration;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    NgswCommChannel.prototype.events;\n    /** @type {?} */\n    NgswCommChannel.prototype.serviceWorker;\n}\n//# sourceMappingURL=low_level.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { merge as obs_merge } from 'rxjs/observable/merge';\nimport { never as obs_never } from 'rxjs/observable/never';\nimport { map as op_map } from 'rxjs/operator/map';\nimport { switchMap as op_switchMap } from 'rxjs/operator/switchMap';\nimport { take as op_take } from 'rxjs/operator/take';\nimport { toPromise as op_toPromise } from 'rxjs/operator/toPromise';\nimport { ERR_SW_NOT_SUPPORTED, NgswCommChannel } from './low_level';\n/**\n * Subscribe and listen to push notifications from the Service Worker.\n *\n * \\@experimental\n */\nvar SwPush = /** @class */ (function () {\n    function SwPush(sw) {\n        this.sw = sw;\n        this.subscriptionChanges = new Subject();\n        if (!sw.isEnabled) {\n            this.messages = obs_never();\n            this.subscription = obs_never();\n            return;\n        }\n        this.messages =\n            op_map.call(this.sw.eventsOfType('PUSH'), function (message) { return message.data; });\n        this.pushManager = /** @type {?} */ ((op_map.call(this.sw.registration, function (registration) { return registration.pushManager; })));\n        var /** @type {?} */ workerDrivenSubscriptions = /** @type {?} */ ((op_switchMap.call(this.pushManager, function (pm) { return pm.getSubscription().then(function (sub) { return sub; }); })));\n        this.subscription = obs_merge(workerDrivenSubscriptions, this.subscriptionChanges);\n    }\n    Object.defineProperty(SwPush.prototype, \"isEnabled\", {\n        /**\n         * Returns true if the Service Worker is enabled (supported by the browser and enabled via\n         * ServiceWorkerModule).\n         */\n        get: /**\n         * Returns true if the Service Worker is enabled (supported by the browser and enabled via\n         * ServiceWorkerModule).\n         * @return {?}\n         */\n        function () { return this.sw.isEnabled; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    SwPush.prototype.requestSubscription = /**\n     * @param {?} options\n     * @return {?}\n     */\n    function (options) {\n        var _this = this;\n        if (!this.sw.isEnabled) {\n            return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n        }\n        var /** @type {?} */ pushOptions = { userVisibleOnly: true };\n        var /** @type {?} */ key = atob(options.serverPublicKey.replace(/_/g, '/').replace(/-/g, '+'));\n        var /** @type {?} */ applicationServerKey = new Uint8Array(new ArrayBuffer(key.length));\n        for (var /** @type {?} */ i = 0; i < key.length; i++) {\n            applicationServerKey[i] = key.charCodeAt(i);\n        }\n        pushOptions.applicationServerKey = applicationServerKey;\n        var /** @type {?} */ subscribe = /** @type {?} */ ((op_switchMap.call(this.pushManager, function (pm) { return pm.subscribe(pushOptions); })));\n        var /** @type {?} */ subscribeOnce = op_take.call(subscribe, 1);\n        return (/** @type {?} */ (op_toPromise.call(subscribeOnce))).then(function (sub) {\n            _this.subscriptionChanges.next(sub);\n            return sub;\n        });\n    };\n    /**\n     * @return {?}\n     */\n    SwPush.prototype.unsubscribe = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.sw.isEnabled) {\n            return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n        }\n        var /** @type {?} */ unsubscribe = op_switchMap.call(this.subscription, function (sub) {\n            if (sub !== null) {\n                return sub.unsubscribe().then(function (success) {\n                    if (success) {\n                        _this.subscriptionChanges.next(null);\n                        return undefined;\n                    }\n                    else {\n                        throw new Error('Unsubscribe failed!');\n                    }\n                });\n            }\n            else {\n                throw new Error('Not subscribed to push notifications.');\n            }\n        });\n        var /** @type {?} */ unsubscribeOnce = op_take.call(unsubscribe, 1);\n        return /** @type {?} */ (op_toPromise.call(unsubscribeOnce));\n    };\n    SwPush.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    SwPush.ctorParameters = function () { return [\n        { type: NgswCommChannel, },\n    ]; };\n    return SwPush;\n}());\nexport { SwPush };\nfunction SwPush_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SwPush.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SwPush.ctorParameters;\n    /** @type {?} */\n    SwPush.prototype.messages;\n    /** @type {?} */\n    SwPush.prototype.subscription;\n    /** @type {?} */\n    SwPush.prototype.pushManager;\n    /** @type {?} */\n    SwPush.prototype.subscriptionChanges;\n    /** @type {?} */\n    SwPush.prototype.sw;\n}\n//# sourceMappingURL=push.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from '@angular/core';\nimport { never as obs_never } from 'rxjs/observable/never';\nimport { ERR_SW_NOT_SUPPORTED, NgswCommChannel } from './low_level';\n/**\n * Subscribe to update notifications from the Service Worker, trigger update\n * checks, and forcibly activate updates.\n *\n * \\@experimental\n */\nvar SwUpdate = /** @class */ (function () {\n    function SwUpdate(sw) {\n        this.sw = sw;\n        if (!sw.isEnabled) {\n            this.available = obs_never();\n            this.activated = obs_never();\n            return;\n        }\n        this.available = this.sw.eventsOfType('UPDATE_AVAILABLE');\n        this.activated = this.sw.eventsOfType('UPDATE_ACTIVATED');\n    }\n    Object.defineProperty(SwUpdate.prototype, \"isEnabled\", {\n        /**\n         * Returns true if the Service Worker is enabled (supported by the browser and enabled via\n         * ServiceWorkerModule).\n         */\n        get: /**\n         * Returns true if the Service Worker is enabled (supported by the browser and enabled via\n         * ServiceWorkerModule).\n         * @return {?}\n         */\n        function () { return this.sw.isEnabled; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SwUpdate.prototype.checkForUpdate = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.sw.isEnabled) {\n            return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n        }\n        var /** @type {?} */ statusNonce = this.sw.generateNonce();\n        return this.sw.postMessageWithStatus('CHECK_FOR_UPDATES', { statusNonce: statusNonce }, statusNonce);\n    };\n    /**\n     * @return {?}\n     */\n    SwUpdate.prototype.activateUpdate = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.sw.isEnabled) {\n            return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n        }\n        var /** @type {?} */ statusNonce = this.sw.generateNonce();\n        return this.sw.postMessageWithStatus('ACTIVATE_UPDATE', { statusNonce: statusNonce }, statusNonce);\n    };\n    SwUpdate.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    SwUpdate.ctorParameters = function () { return [\n        { type: NgswCommChannel, },\n    ]; };\n    return SwUpdate;\n}());\nexport { SwUpdate };\nfunction SwUpdate_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SwUpdate.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SwUpdate.ctorParameters;\n    /** @type {?} */\n    SwUpdate.prototype.available;\n    /** @type {?} */\n    SwUpdate.prototype.activated;\n    /** @type {?} */\n    SwUpdate.prototype.sw;\n}\n//# sourceMappingURL=update.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport { APP_INITIALIZER, ApplicationRef, InjectionToken, Injector, NgModule, PLATFORM_ID } from '@angular/core';\nimport { filter as op_filter } from 'rxjs/operator/filter';\nimport { take as op_take } from 'rxjs/operator/take';\nimport { toPromise as op_toPromise } from 'rxjs/operator/toPromise';\nimport { NgswCommChannel } from './low_level';\nimport { SwPush } from './push';\nimport { SwUpdate } from './update';\n/**\n * @abstract\n */\nvar /**\n * @abstract\n */\nRegistrationOptions = /** @class */ (function () {\n    function RegistrationOptions() {\n    }\n    return RegistrationOptions;\n}());\n/**\n * @abstract\n */\nexport { RegistrationOptions };\nfunction RegistrationOptions_tsickle_Closure_declarations() {\n    /** @type {?} */\n    RegistrationOptions.prototype.scope;\n    /** @type {?} */\n    RegistrationOptions.prototype.enabled;\n}\nexport var /** @type {?} */ SCRIPT = new InjectionToken('NGSW_REGISTER_SCRIPT');\n/**\n * @param {?} injector\n * @param {?} script\n * @param {?} options\n * @param {?} platformId\n * @return {?}\n */\nexport function ngswAppInitializer(injector, script, options, platformId) {\n    var /** @type {?} */ initializer = function () {\n        var /** @type {?} */ app = injector.get(ApplicationRef);\n        if (!(isPlatformBrowser(platformId) && ('serviceWorker' in navigator) &&\n            options.enabled !== false)) {\n            return;\n        }\n        var /** @type {?} */ onStable = /** @type {?} */ (op_filter.call(app.isStable, function (stable) { return !!stable; }));\n        var /** @type {?} */ isStable = /** @type {?} */ (op_take.call(onStable, 1));\n        var /** @type {?} */ whenStable = /** @type {?} */ (op_toPromise.call(isStable));\n        // Wait for service worker controller changes, and fire an INITIALIZE action when a new SW\n        // becomes active. This allows the SW to initialize itself even if there is no application\n        // traffic.\n        navigator.serviceWorker.addEventListener('controllerchange', function () {\n            if (navigator.serviceWorker.controller !== null) {\n                navigator.serviceWorker.controller.postMessage({ action: 'INITIALIZE' });\n            }\n        });\n        // Don't return the Promise, as that will block the application until the SW is registered, and\n        // cause a crash if the SW registration fails.\n        whenStable.then(function () { return navigator.serviceWorker.register(script, { scope: options.scope }); });\n    };\n    return initializer;\n}\n/**\n * @param {?} opts\n * @param {?} platformId\n * @return {?}\n */\nexport function ngswCommChannelFactory(opts, platformId) {\n    return new NgswCommChannel(opts.enabled !== false ? navigator.serviceWorker : undefined, platformId);\n}\n/**\n * \\@experimental\n */\nvar ServiceWorkerModule = /** @class */ (function () {\n    function ServiceWorkerModule() {\n    }\n    /**\n     * Register the given Angular Service Worker script.\n     *\n     * If `enabled` is set to `false` in the given options, the module will behave as if service\n     * workers are not supported by the browser, and the service worker will not be registered.\n     */\n    /**\n     * Register the given Angular Service Worker script.\n     *\n     * If `enabled` is set to `false` in the given options, the module will behave as if service\n     * workers are not supported by the browser, and the service worker will not be registered.\n     * @param {?} script\n     * @param {?=} opts\n     * @return {?}\n     */\n    ServiceWorkerModule.register = /**\n     * Register the given Angular Service Worker script.\n     *\n     * If `enabled` is set to `false` in the given options, the module will behave as if service\n     * workers are not supported by the browser, and the service worker will not be registered.\n     * @param {?} script\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (script, opts) {\n        if (opts === void 0) { opts = {}; }\n        return {\n            ngModule: ServiceWorkerModule,\n            providers: [\n                { provide: SCRIPT, useValue: script },\n                { provide: RegistrationOptions, useValue: opts },\n                {\n                    provide: NgswCommChannel,\n                    useFactory: ngswCommChannelFactory,\n                    deps: [RegistrationOptions, PLATFORM_ID]\n                },\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: ngswAppInitializer,\n                    deps: [Injector, SCRIPT, RegistrationOptions, PLATFORM_ID],\n                    multi: true,\n                },\n            ],\n        };\n    };\n    ServiceWorkerModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [SwPush, SwUpdate],\n                },] },\n    ];\n    /** @nocollapse */\n    ServiceWorkerModule.ctorParameters = function () { return []; };\n    return ServiceWorkerModule;\n}());\nexport { ServiceWorkerModule };\nfunction ServiceWorkerModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ServiceWorkerModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ServiceWorkerModule.ctorParameters;\n}\n//# sourceMappingURL=module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { ServiceWorkerModule } from './module';\nexport { SwPush } from './push';\nexport { SwUpdate } from './update';\n//# sourceMappingURL=index.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport { ServiceWorkerModule, SwPush, SwUpdate } from './src/index';\n// This file only reexports content of the `src` folder. Keep it that way.\n//# sourceMappingURL=public_api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { ServiceWorkerModule, SwPush, SwUpdate } from './public_api';\nexport { NgswCommChannel as ɵe } from './src/low_level';\nexport { RegistrationOptions as ɵa, SCRIPT as ɵb, ngswAppInitializer as ɵc, ngswCommChannelFactory as ɵd } from './src/module';\n//# sourceMappingURL=service-worker.js.map"],"names":["obs_defer","obs_throw","obs_fromEvent","op_map","obs_of","obs_concat","op_filter","op_switchMap","op_publish","op_take","op_do","tslib_1.__assign","op_toPromise","obs_never","obs_merge"],"mappings":"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"}