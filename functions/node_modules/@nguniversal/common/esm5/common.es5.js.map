{"version":3,"file":"common.es5.js","sources":["../../modules/common/public-api.ts","../../modules/common/src/transfer_http.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { TransferHttpCacheModule } from './src/transfer_http';\n// export { StateTransferInitializerModule } from './src/state-transfer-initilizer/module';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  HTTP_INTERCEPTORS,\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport {ApplicationRef, Injectable, NgModule} from '@angular/core';\nimport {BrowserTransferStateModule, TransferState, makeStateKey} from '@angular/platform-browser';\nimport {Observable} from 'rxjs/Observable';\nimport {of as observableOf} from 'rxjs/observable/of';\nimport {filter} from 'rxjs/operators/filter';\nimport {tap} from 'rxjs/operators/tap';\nimport {take} from 'rxjs/operators/take';\n\nexport interface TransferHttpResponse {\n  body?: any | null;\n  headers?: {[k: string]: string[]};\n  status?: number;\n  statusText?: string;\n  url?: string;\n}\n\nfunction getHeadersMap(headers: HttpHeaders) {\n  const headersMap: {[name: string]: string[]} = {};\n  for (const key of headers.keys()) {\n    headersMap[key] = headers.getAll(key)!;\n  }\n  return headersMap;\n}\n\n@Injectable()\nexport class TransferHttpCacheInterceptor implements HttpInterceptor {\n\n  private isCacheActive = true;\n\n  private invalidateCacheEntry(url: string) {\n    this.transferState.remove(makeStateKey<TransferHttpResponse>('G.' + url));\n    this.transferState.remove(makeStateKey<TransferHttpResponse>('H.' + url));\n  }\n\n  constructor(appRef: ApplicationRef, private transferState: TransferState) {\n    // Stop using the cache if the application has stabilized, indicating initial rendering is\n    // complete.\n    appRef.isStable\n      .pipe(\n        filter((isStable: boolean) => isStable),\n        take(1)\n      ).toPromise()\n      .then(() => { this.isCacheActive = false; });\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Stop using the cache if there is a mutating call.\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      this.isCacheActive = false;\n      this.invalidateCacheEntry(req.url);\n    }\n\n    if (!this.isCacheActive) {\n      // Cache is no longer active. Pass the request through.\n      return next.handle(req);\n    }\n\n    const key = (req.method === 'GET' ? 'G.' : 'H.') + req.url;\n    const storeKey = makeStateKey<TransferHttpResponse>(key);\n\n    if (this.transferState.hasKey(storeKey)) {\n      // Request found in cache. Respond using it.\n      const response = this.transferState.get(storeKey, {} as TransferHttpResponse);\n      return observableOf(new HttpResponse<any>({\n        body: response.body,\n        headers: new HttpHeaders(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        url: response.url,\n      }));\n    } else {\n      // Request not found in cache. Make the request and cache it.\n      const httpEvent = next.handle(req);\n      return httpEvent\n        .pipe(\n          tap((event: HttpEvent<any>) => {\n            if (event instanceof HttpResponse) {\n              this.transferState.set(storeKey, {\n                body: event.body,\n                headers: getHeadersMap(event.headers),\n                status: event.status,\n                statusText: event.statusText,\n                url: event.url!,\n              });\n            }\n          })\n        );\n    }\n  }\n}\n\n/**\n * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP\n * calls from the server to the client application.\n */\n@NgModule({\n  imports: [BrowserTransferStateModule],\n  providers: [\n    TransferHttpCacheInterceptor,\n    {provide: HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true},\n  ],\n})\nexport class TransferHttpCacheModule {}\n"],"names":["observableOf"],"mappings":";;;;;;;;;;;;;;;;;;;ACOA;;;;AAyBA,SAAA,aAAA,CAAuB,OAAoB,EAA3C;IACE,qBAAM,UAAU,GAA+B,EAAE,CAAC;IAClD,KAAkB,IAApB,EAAA,GAAA,CAAkC,EAAd,EAApB,GAAoB,OAAO,CAAC,IAAI,EAAE,EAAd,EAApB,GAAA,EAAA,CAAA,MAAkC,EAAd,EAApB,EAAkC,EAAlC;QAAO,IAAM,GAAG,GAAhB,EAAA,CAAA,EAAA,CAAgB,CAAhB;QACI,UAAU,CAAC,GAAG,CAAC,sBAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAC,CAAC;KACxC;IACD,OAAO,UAAU,CAAC;CACnB;;IAYC,SAAF,4BAAA,CAAc,MAAsB,EAAU,aAA4B,EAA1E;QAAE,IAAF,KAAA,GAAA,IAAA,CASG;QAT2C,IAA9C,CAAA,aAA2D,GAAb,aAAa,CAAe;QAP1E,IAAA,CAAA,aAAA,GAA0B,IAAI,CAA9B;;;QAUI,MAAM,CAAC,QAAQ;aACZ,IAAI,CACH,MAAM,CAAC,UAAC,QAAiB,EADjC,EACsC,OAAA,QAAQ,CAD9C,EAC8C,CAAC,EACvC,IAAI,CAAC,CAAC,CAAC,CACR,CAAC,SAAS,EAAE;aACZ,IAAI,CAAC,YAAZ,EAAoB,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;KAChD;;;;;IAdO,4BAAV,CAAA,SAAA,CAAA,oBAA8B;;;;IAA9B,UAA+B,GAAW,EAA1C;QACI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,YAAY,CAAuB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,YAAY,CAAuB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;;;;;;;IAc5E,4BAAF,CAAA,SAAA,CAAA,SAAW;;;;;IAAT,UAAU,GAAqB,EAAE,IAAiB,EAApD;QAAE,IAAF,KAAA,GAAA,IAAA,CA2CG;;QAzCC,IAAI,GAAG,CAAC,MAAM,KAAK,KAAK,IAAI,GAAG,CAAC,MAAM,KAAK,MAAM,EAAE;YACjD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACpC;QAED,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;;YAEvB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACzB;QAED,qBAAM,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,KAAK,KAAK,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC;QAC3D,qBAAM,QAAQ,GAAG,YAAY,CAAuB,GAAG,CAAC,CAAC;QAEzD,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;;YAEvC,qBAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,oBAAE,EAA0B,EAAC,CAAC;YAC9E,OAAOA,EAAY,CAAC,IAAI,YAAY,CAAM;gBACxC,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,OAAO,EAAE,IAAI,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC;gBAC1C,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,UAAU,EAAE,QAAQ,CAAC,UAAU;gBAC/B,GAAG,EAAE,QAAQ,CAAC,GAAG;aAClB,CAAC,CAAC,CAAC;SACL;aAAM;;YAEL,qBAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACnC,OAAO,SAAS;iBACb,IAAI,CACH,GAAG,CAAC,UAAC,KAAqB,EADpC;gBAEY,IAAI,KAAK,YAAY,YAAY,EAAE;oBACjC,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE;wBAC/B,IAAI,EAAE,KAAK,CAAC,IAAI;wBAChB,OAAO,EAAE,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC;wBACrC,MAAM,EAAE,KAAK,CAAC,MAAM;wBACpB,UAAU,EAAE,KAAK,CAAC,UAAU;wBAC5B,GAAG,qBAAE,KAAK,CAAC,GAAG,EAAC;qBAChB,CAAC,CAAC;iBACJ;aACF,CAAC,CACH,CAAC;SACL;KACF,CAAH;;QAhEA,EAAA,IAAA,EAAC,UAAU,EAAX;;;;QAxBA,EAAA,IAAA,EAAQ,cAAc,GAAtB;QACA,EAAA,IAAA,EAAoC,aAAa,GAAjD;;IAjBA,OAAA,4BAAA,CAAA;;AAyCA;;;;;;;;QAsEA,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;oBACR,OAAO,EAAE,CAAC,0BAA0B,CAAC;oBACrC,SAAS,EAAE;wBACT,4BAA4B;wBAC5B,EAAC,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,4BAA4B,EAAE,KAAK,EAAE,IAAI,EAAC;qBACrF;iBACF,EAAD,EAAA;;;;IArHA,OAAA,uBAAA,CAAA;;;;;;;ADOA;;;;;;;;;"}